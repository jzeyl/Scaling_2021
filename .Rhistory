avgdf %>% dplyr::select(aud_rel) %>%
gheatmap(p,., #"Category",
width = 0.2, offset = 0,
color = "black",
#colnames = FALSE,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 0)
avgdf %>% dplyr::select(aud_rel) %>%
gheatmap(p,., #"Category",
width = 0.2, offset = 0,
color = "black",
#colnames = FALSE,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 0)+
scale_fill_manual(values = c("White","red","black"), na.value = "#FFFFFF")
avgdf %>% dplyr::select(aud_rel) %>%
gheatmap(p,., #"Category",
width = 0.2, offset = 0,
color = "black",
#colnames = FALSE,
colnames_position = "top",
colnames_angle = 0,
colnames_offset_x = 0,
colnames_offset_y = 0)+
scale_fill_manual(values = c("white","grey","black"), na.value = "#FFFFFF")
names(avgdf)
superorderdf<-avgdf %>% count(superorder)
View(superorderdf)
avgdf_super<-avgdf[!duplicated(avgdf$superorder),]#orders only
View(avgdf_super)
View(superorderdf)
avgdf_super<-arrange(avgdf_,superorder)#sort to match order df
avgdf_super<-arrange(avgdf_super,superorder)#sort to match order df
View(avgdf_super)
avgdf$n<-superorderdf$n#attach number of species in order
avgdf_super$n<-superorderdf$n#attach number of species in order
str(avgdf_super$Binomial)
orderPhy<-keep.tip(birdtreels,avgdf_super$Binomial)
avgdf_super$full<-paste0(avgdf_super$Order," (",as.character(avgdf_super$n),")")
avgdf_super$full
avgdf_super$Order<-as.character(avgdf_super$Order)
avgdf_super$Order
orderPhy$tip.label
orderPhy$tip.label
orderPhy$tip.label<-as.character(orderPhy$tip.label)#######have as character!!!
str(avgdf_super$full)
ppiped <- ggtree(orderPhy, layout = "circular",
branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full, angle = angle), offset = 1) +
xlim(NA,30)
ppiped
#order rectangle
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full), offset = 1) +
xlim(NA,30) +
#geom_text(aes(label = node))+
geom_cladelabel(51, "Paleognathae", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(50, "Galloanserae(8)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(22, "Apodiformes (1)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(48, "Columbaves (8)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(18, "Gruiformes (5)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(41, "Aequorlitornithes(59)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(9, "Accipitriformes(7)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(35, "Australaves(30)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(8, "Strigiformes (2)", offset=7, barsize=2, align = T, angle=0,offset.text=0)+#, fontsize=3
geom_cladelabel(38, "Coraciimorphae (5)", offset=7, barsize=2, align = T, angle=0,offset.text=0)#, fontsize=3
ppiped
ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full), offset = 1) +
xlim(NA,30)
avgdf %>% count(aud_rel)
avgdf %>% group_by(superorder) %>% count(aud_rel)
?filter
avgdf %>% group_by(superorder) %filter(., superorder == "Yes") %>% count(aud_rel)
avgdf %>% group_by(superorder) %>% filter(., superorder == "Yes") %>% count(aud_rel)
avgdf %>% filter(superorder == "Yes")
avgdf %>% filter(.,superorder == "Yes")
unique(avgdf$superorder)
avgdf %>% filter(aud_rel == "Yes")
avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder) %>% count()
avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder,aud_rel) %>% count()
avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder,aud_rel) %>% count() %>% View()
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder,aud_rel) %>% count()
View(audio_count)
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder) %>% count()
sum(audio_count$n)
#count number of species with audiograms available
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder,aul_rel) %>% count()
#count number of species with audiograms available
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder,aud_rel) %>% count()
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder) %>% count(Order)
audio_count<-avgdf %>% filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder) %>% count()
savehistory("E:/test.Rhistory")
avgdf_super<-avgdf[!duplicated(avgdf$superorder),]#orders only
View(avgdf_super)
View(superorderdf)
superorderdf<-avgdf %>% count(superorder)
#count number of species with audiograms available
audio_count<-avgdf %>%
filter(aud_rel == "Yes"| aud_rel =="Congener") %>%
group_by(superorder) %>% count()
avgdf_super<-avgdf[!duplicated(avgdf$superorder),]#orders only
View(avgdf_super)
View(superorderdf)
avgdf_super<-avgdf[!duplicated(avgdf$superorder),]#orders only
avgdf_super<-arrange(avgdf_super,superorder)#sort to match order df
avgdf_super$n<-superorderdf$n#attach number of species in order
orderPhy<-keep.tip(birdtreels,avgdf_super$Binomial)
orderPhy
plot(orderPhy)
#prune phylogeny to superorder level
orderPhy<-keep.tip(birdtreels,avgdf_super$Binomial)
avgdf_super$full<-paste0(avgdf_super$Order," (",as.character(avgdf_super$n),")")
avgdf_super$full
avgdf_super$full<-paste0(avgdf_super$Order," (",as.character(avgdf_super$n),")",
expression("My Title"^2))
avgdf_super$full
avgdf_super$Order<-as.character(avgdf_super$Order)
avgdf_super$Order
orderPhy$tip.label
orderPhy$tip.label
orderPhy$tip.label<-as.character(orderPhy$tip.label)#######have as character!!!
str(avgdf_super$full)
ppiped <- ggtree(orderPhy, layout = "circular",
branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full, angle = angle), offset = 1) +
xlim(NA,30)
ppiped
ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full), offset = 1) +
xlim(NA,30)
expression("My Title"^2)
avgdf_super$full<-expression(paste0(avgdf_super$Order,
" (",
as.character(avgdf_super$n),
")",
"My Title"^2))
avgdf_super$full
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full), offset = 1) +
xlim(NA,30)
ppiped
labNames <- c('xLab','yLab')
xlab <- bquote(.(labNames[1]) ~ x^2)
ylab <- bquote(.(labNames[2]) ~ y^2)
plot(c(1:10), xlab = xlab, ylab = ylab)
xlab
avgdf_super$full<-paste0(avgdf_super$Order,
" (",
as.character(avgdf_super$n),
")"                         )
avgdf_super$full
View(audio_count)
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=full), offset = 1) +
xlim(NA,30)
ppiped
labNames <- c('xLab','yLab')
plot(c(1:10),
xlab=substitute(paste(nn, x^2), list(nn=labNames[1])),
ylab=substitute(paste(nn, y^2), list(nn=labNames[2])))
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label=expression("Biomass (g per" ~ m^3 *")")), offset = 1) +
xlim(NA,30)
ppiped
#order rectangle
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(label = expression("Biomass (g per" ~ m^3 *")"), offset = 1) +
xlim(NA,30)
ppiped
avgdf_super$full<-paste0(avgdf_super$Order,
" (",
as.character(avgdf_super$n),
")",)
avgdf_super$full<-paste0(avgdf_super$Order,
" (",
as.character(avgdf_super$n),
")")
avgdf_super$full
expression(avgdf_super$Order ~ m^3 *")")
?ggsave
ppiped
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label = full), offset = 1) +
xlim(NA,30)
ppiped
ggsave(ppiped,"C:/Users/jeffz/Downloads/JZ_rescalingms_JAN/Figs/inset.svg",
width = 4, height = 4)
ppiped <- ggtree(orderPhy,  branch.length = "none") %<+% avgdf_super +
geom_tiplab(aes(label = full), offset = 1) +
xlim(NA,30)
ppiped
ggsave("C:/Users/jeffz/Downloads/JZ_rescalingms_JAN/Figs/inset.svg",
width = 4, height = 4)
ggsave("C:/Users/jeffz/Downloads/JZ_rescalingms_JAN/Figs/inset.svg",
device = "svg",
width = 4, height = 4)
install.paca
install.packages('svglite')
ggsave("C:/Users/jeffz/Downloads/JZ_rescalingms_JAN/Figs/inset.svg",
device = "svg",
width = 4, height = 4)
ggplot()+
#3d vs 3D
#geom_path(aes(x = log(bm), y = log(three_d)*1.1), col = "red", alpha = 0.5)+
#geom_path(aes(x = log(bm), y = log(three_d)*0.9), col = "red", alpha = 0.5)+
##geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.9),
#                ymax=log(three_d)),
#            fill="red", alpha=0.5)+
#geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*1.1),
#                  ymax=log(three_d)),
#              fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d))),
label = "3D~3D (slope: 1)")+
geom_path(aes(x = log(bm), y = log(three_d)))+
#three_three
#3D vs area
#ggplot()+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.76), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.56), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.76),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.56),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5) +
# geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.66)),
#            label = "2D~3D (slope: 0.66)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.66))+
#are vs
#  geom_path(aes(x = log(bm), y = log(three_d)*0.43), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.23), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.43),
#                 ymax=log(three_d)*0.23),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.23),
#                 ymax=log(three_d)*0.43),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.33)),
label = "2D~3D (slope: 0.33)")+
geom_path(aes(x = log(bm), y = log(y)*0.33))+
#angle vs 3D
geom_path(aes(x = log(bm), y = log(y)*0))+
#themes, scales
theme_minimal()+
scale_x_continuous(limits = c(0,11), breaks = seq(0,10,2))+
scale_y_continuous(limits = c(-2,10))
bm<-seq(1,10000,5)
three_d<-seq(1,10000,5)
three_d_hyper<-three_d*1.1
three_d_hypo<-three_d*0.9
#0 is angle vs 3D
ggplot()+
#3d vs 3D
#geom_path(aes(x = log(bm), y = log(three_d)*1.1), col = "red", alpha = 0.5)+
#geom_path(aes(x = log(bm), y = log(three_d)*0.9), col = "red", alpha = 0.5)+
##geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.9),
#                ymax=log(three_d)),
#            fill="red", alpha=0.5)+
#geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*1.1),
#                  ymax=log(three_d)),
#              fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d))),
label = "3D~3D (slope: 1)")+
geom_path(aes(x = log(bm), y = log(three_d)))+
#three_three
#3D vs area
#ggplot()+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.76), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.56), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.76),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.56),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5) +
# geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.66)),
#            label = "2D~3D (slope: 0.66)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.66))+
#are vs
#  geom_path(aes(x = log(bm), y = log(three_d)*0.43), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.23), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.43),
#                 ymax=log(three_d)*0.23),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.23),
#                 ymax=log(three_d)*0.43),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.33)),
label = "2D~3D (slope: 0.33)")+
geom_path(aes(x = log(bm), y = log(y)*0.33))+
#angle vs 3D
geom_path(aes(x = log(bm), y = log(y)*0))+
#themes, scales
theme_minimal()+
scale_x_continuous(limits = c(0,11), breaks = seq(0,10,2))+
scale_y_continuous(limits = c(-2,10))
ggplot()+
#3d vs 3D
#geom_path(aes(x = log(bm), y = log(three_d)*1.1), col = "red", alpha = 0.5)+
#geom_path(aes(x = log(bm), y = log(three_d)*0.9), col = "red", alpha = 0.5)+
##geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.9),
#                ymax=log(three_d)),
#            fill="red", alpha=0.5)+
#geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*1.1),
#                  ymax=log(three_d)),
#              fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d))),
label = "3D~3D (slope: 1)")+
geom_path(aes(x = log(bm), y = log(three_d)))+
#three_three
#3D vs area
#ggplot()+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.76), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.56), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.76),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.56),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5) +
# geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.66)),
#            label = "2D~3D (slope: 0.66)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.66))+
#are vs
#  geom_path(aes(x = log(bm), y = log(three_d)*0.43), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.23), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.43),
#                 ymax=log(three_d)*0.23),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.23),
#                 ymax=log(three_d)*0.43),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.33)),
label = "2D~3D (slope: 0.33)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.33))+
#angle vs 3D
geom_path(aes(x = log(bm), y = log(three_d)*0))+
#themes, scales
theme_minimal()+
scale_x_continuous(limits = c(0,11), breaks = seq(0,10,2))+
scale_y_continuous(limits = c(-2,10))
slopes<-c(1,0.66,0.5,0.3,0)
intra_rel<-c("ESL~CL, TM~FP,RW~FP",
"TM~CV,FP~CV",
"COff~TM,CL~FP,UH~TM",
"CL~CV",
"TMA~TM")
tabl<-as.dataframe(cbond(slopes,intra_rel))
tabl<-as.data.frame(c.bind(slopes,intra_rel))
c.bind(slopes,intra_rel)
cbind(slopes,intra_rel)
tabl<-as.data.frame(cbind(slopes,intra_rel))
View(tabl)
library(gt)
gt(tabl)
plottab<-gt(tabl)
library(patchwork)
lineplot<-ggplot()+
#3d vs 3D
#geom_path(aes(x = log(bm), y = log(three_d)*1.1), col = "red", alpha = 0.5)+
#geom_path(aes(x = log(bm), y = log(three_d)*0.9), col = "red", alpha = 0.5)+
##geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.9),
#                ymax=log(three_d)),
#            fill="red", alpha=0.5)+
#geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*1.1),
#                  ymax=log(three_d)),
#              fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d))),
label = "3D~3D (slope: 1)")+
geom_path(aes(x = log(bm), y = log(three_d)))+
#three_three
#3D vs area
#ggplot()+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.76), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.56), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.76),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.56),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5) +
# geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.66)),
#            label = "2D~3D (slope: 0.66)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.66))+
#are vs
#  geom_path(aes(x = log(bm), y = log(three_d)*0.43), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.23), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.43),
#                 ymax=log(three_d)*0.23),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.23),
#                 ymax=log(three_d)*0.43),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.33)),
label = "2D~3D (slope: 0.33)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.33))+
#angle vs 3D
geom_path(aes(x = log(bm), y = log(three_d)*0))+
#themes, scales
theme_minimal()+
scale_x_continuous(limits = c(0,11), breaks = seq(0,10,2))+
scale_y_continuous(limits = c(-2,10))
lineplot
lineplot+plottab
lineplot
plottab
lineplot
lineplot<-ggplot()+
#3d vs 3D
#geom_path(aes(x = log(bm), y = log(three_d)*1.1), col = "red", alpha = 0.5)+
#geom_path(aes(x = log(bm), y = log(three_d)*0.9), col = "red", alpha = 0.5)+
##geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.9),
#                ymax=log(three_d)),
#            fill="red", alpha=0.5)+
#geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*1.1),
#                  ymax=log(three_d)),
#              fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d))),
label = "3D~3D (slope: 1)")+
geom_path(aes(x = log(bm), y = log(three_d)))+
#three_three
#3D vs area
#ggplot()+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.76), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.56), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.76),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.56),
#                 ymax=log(three_d)*0.66),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.66)),
label = "2D~3D (slope: 0.66)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.66))+
#are vs
#  geom_path(aes(x = log(bm), y = log(three_d)*0.43), col = "red", alpha = 0.5)+
#  geom_path(aes(x = log(bm), y = log(three_d)*0.23), col = "red", alpha = 0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.43),
#                 ymax=log(three_d)*0.23),
#             fill="red", alpha=0.5)+
# geom_ribbon(aes(x = log(bm),ymin=(log(three_d)*0.23),
#                 ymax=log(three_d)*0.43),
#             fill="red", alpha=0.5) +
geom_text(aes(x = max(log(three_d)+1), y = max(log(three_d)*0.33)),
label = "1D~3D (slope: 0.33)")+
geom_path(aes(x = log(bm), y = log(three_d)*0.33))+
#angle vs 3D
geom_path(aes(x = log(bm), y = log(three_d)*0))+
#themes, scales
theme_minimal()+
scale_x_continuous(limits = c(0,11), breaks = seq(0,10,2))+
scale_y_continuous(limits = c(-2,10))
lineplot
library(ggplot2)
# Create a ggplot plot
plot_object <-
ggplot(
data = gtcars,
aes(x = hp, y = trq,
size = msrp)) +
geom_point(color = "blue") +
theme(legend.position = "none")
# Create a tibble that contains two
# cells (where one is a placeholder for
# an image), then, create a gt table;
# use the `text_transform()` function
# to insert the plot using by calling
# `ggplot_object()` within the user-
# defined function
tab_1 <-
dplyr::tibble(
text = "Here is a ggplot:",
ggplot = NA
) %>%
gt() %>%
text_transform(
locations = cells_body(columns = ggplot),
fn = function(x) {
plot_object %>%
ggplot_image(height = px(200))
}
)
tab_1
data(shorebird)
shorebird <- comparative.data(shorebird.tree, shorebird.data, Species, vcv=TRUE, vcv.dim=3)
mod1 <- pgls(log(Egg.Mass) ~ log(M.Mass) * log(F.Mass), shorebird)
par(mfrow=c(2,2))
plot(mod1)
data(shorebird)
shorebird <- comparative.data(shorebird.tree, shorebird.data, Species, vcv=TRUE, vcv.dim=3)
mod1 <- pgls(log(Egg.Mass) ~ log(M.Mass) * log(F.Mass), shorebird)
par(mfrow=c(2,2))
plot(mod1)
mod1
plot(mod1)
plot(mod1)
par(mfrow=(c(2,2)))
plot(mod1)
