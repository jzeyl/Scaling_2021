axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+{
if (pval<0.05)  geom_point(aes_string(shape="aud_rel"), size = 2, col = "black")
else geom_point(aes_string(shape="aud_rel"), size = 2, col = "black", alpha = 0.4)
} + {
if (pval<0.05)  geom_line(aes_string(x = vectx_modellist_lf[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
}+
#geom_text(data = lbl,aes(x = xpos, y = ypos, label = annotateText,
#                         hjust = hjust, vjust = vjust))+
#scale_shape_manual(values=c(17, 16))+
annotate(geom = 'text', x = -Inf, y = -Inf, label = paste(' ',' R^2 == ',signif(summary(pgls_models_list_bh[[e]])$r.squared,2)), hjust = -0.05, vjust = -0.1, parse = TRUE)+
annotate(geom = 'text', x = -Inf, y = -Inf, label = paste(' ',' P == ',signif(summary(pgls_models_list_bh[[e]])$coefficients[,4][[2]],2)), hjust = -0.05, vjust = -2.1, parse = TRUE)
ggtitle(categorylist_aud[e])
p
}
runplotpgls_aud_bh(10)+  geom_text(aes(label=binomial), angle = 30)
runplotpgls_aud_bh(10)
#PLOT ALL BEST FREQUENCY
runplotpgls_aud_bh(1)+
runplotpgls_aud_bh(2)+
runplotpgls_aud_bh(3)+
runplotpgls_aud_bh(4)+
runplotpgls_aud_bh(5)+
runplotpgls_aud_bh(6)+
runplotpgls_aud_bh(7)+
runplotpgls_aud_bh(8)+
runplotpgls_aud_bh(9)+
runplotpgls_aud_bh(10)+
runplotpgls_aud_bh(11)+
runplotpgls_aud_bh(12)+
runplotpgls_aud_bh(13)+
runplotpgls_aud_bh(14)+plot_annotation(tag_levels = "A")
runplotpgls_aud_bh(1)+
runplotpgls_aud_bh(2)+
runplotpgls_aud_bh(3)+
runplotpgls_aud_bh(4)+
runplotpgls_aud_bh(5)+
runplotpgls_aud_bh(6)+
runplotpgls_aud_bh(7)
runplotpgls_aud_bh(10)
library(patchwork)
library(dplyr)
runplotpgls_aud_bh(1)+
runplotpgls_aud_bh(2)+
runplotpgls_aud_bh(3)+
runplotpgls_aud_bh(4)+
runplotpgls_aud_bh(5)+
runplotpgls_aud_bh(6)+
runplotpgls_aud_bh(7)
runplotpgls_aud_bh(1)+
runplotpgls_aud_bh(2)+
runplotpgls_aud_bh(3)+
runplotpgls_aud_bh(4)+
runplotpgls_aud_bh(5)+
runplotpgls_aud_bh(6)+
runplotpgls_aud_bh(7)+
runplotpgls_aud_bh(8)+
runplotpgls_aud_bh(9)+
runplotpgls_aud_bh(10)+
runplotpgls_aud_bh(11)+
runplotpgls_aud_bh(12)+
runplotpgls_aud_bh(13)+
runplotpgls_aud_bh(14)+plot_annotation(tag_levels = "A")
modellist_bs
runplotpgls_aud_bh(1)+
runplotpgls_aud_bh(2)+
runplotpgls_aud_bh(3)+
runplotpgls_aud_bh(4)+
runplotpgls_aud_bh(5)+
runplotpgls_aud_bh(6)+
runplotpgls_aud_bh(7)+
runplotpgls_aud_bh(8)+
runplotpgls_aud_bh(9)+
runplotpgls_aud_bh(10)+
runplotpgls_aud_bh(11)+
runplotpgls_aud_bh(12)+
runplotpgls_aud_bh(13)+plot_annotation(tag_levels = "A")
audio_pgls_results
audio_pgls_results %>% names()
modellist_bs
audio_pgls_results$Adj_Rsquared
nrow(audio_pgls_results)
table(audio_pgls_results$`Audiogram metric`)
audiogrampgls_bh
audio_pgls_results
View(audio_pgls_results)
audio_pgls_results<-bind_rows(audiogrampgls_bh,
audiogrampgls_bs,
audiogrampgls_lf,
audiogrampgls_hf)
View(audio_pgls_results)
vecty_modellist_lf
table(audio_pgls_results$`Audiogram metric`)
audio_pgls_results<-bind_rows(audiogrampgls_bh,
audiogrampgls_bs,
audiogrampgls_lf,
audiogrampgls_hf)
audio_pgls_results$CI95_low<-audio_pgls_results$Estimate-audio_pgls_results$`Std. Error`*1.96
audio_pgls_results$CI95_high<-audio_pgls_results$Estimate-audio_pgls_results$`Std. Error`*1.96
#combine estimate +/- 95 CI into one cell
audio_pgls_results$pglsslope<-paste0(audio_pgls_results$Estimate," (",
format(round(audio_pgls_results$CI95_low, 3), nsmall = 3),
",",
format(round(audio_pgls_results$CI95_high, 3), nsmall = 3),
")")
#split up model column
spltmodel<-strsplit(audio_pgls_results$Model,"~")
audio_pgls_results$`Audiogram metric`<-unlist(lapply(spltmodel, `[[`, 1))
audio_pgls_results$anattraitx<-unlist(lapply(spltmodel, `[[`, 2))
#only keep significant relationships
audio_pgls_results<-audio_pgls_results %>% select(`Audiogram metric`,
category,
Coefficients,
pglsslope,
Adj_Rsquared,
P.val,
Lambda)%>%
filter(Coefficients!="(Intercept)" &
P.val <0.05)
#arrange by audiogram metric, category, and R2
audio_pgls_results <-audio_pgls_results %>%
arrange(factor(audio_pgls_results$`Audiogram metric`),
factor(category,levels = c("Impedance match",
"Stiffness",
"Input/output areas",
"Auditory endorgan length",
"Columella size")),
desc(Adj_Rsquared))
# remove the "log" from 'Coefficients'
#audio_pgls_results$xmodel_nolog<-numeric()
for(i in seq_along(audio_pgls_results$Coefficients)){
audio_pgls_results$Coefficients[i]<-gsub("[\\(\\)]", "", regmatches(audio_pgls_results$Coefficients, gregexpr("\\(.*?\\)", audio_pgls_results$Coefficients))[[i]])
}
#visualize the table better using the flextable package
flexall<-flextable(audio_pgls_results) %>% add_header_lines(
values = "Table X. ") %>%
#bold(i = ~ P.val < 0.05) %>% # select columns add: j = ~ Coefficients + P.val
autofit()
flexall
table(audio_pgls_results$`Audiogram metric`)
audio_pgls_plt<-bind_rows(audiogrampgls_bh,
audiogrampgls_bs,
audiogrampgls_lf,
audiogrampgls_hf)
View(audio_pgls_plt)
modellist_bs
audio_pgls_plt$Model
splt_modellist<-strsplit(audio_pgls_plt$Model,"~")
splt_modellist
strsplit(audio_pgls_plt$Model,"~")
audio_pgls_plt$Model
audio_pgls_plt$Model
spltmodel<-strsplit(audio_pgls_plt$Model,"~")
audio_pgls_plt$`Audiogram metric`<-unlist(lapply(spltmodel, `[[`, 1))
audio_pgls_plt$anattraitx<-unlist(lapply(spltmodel, `[[`, 2))
names(augio_pgls_plt)
names(audio_pgls_plt)
audio_pgls_plt$Model
audio_pgls_plt %>% select(Model, Coefficients, P.val)%>%
filter(Coefficients!="(Intercept)" &
P.val <0.05)
audio_pgls_plt<-audio_pgls_plt %>% select(Model, Coefficients, P.val)%>%
filter(Coefficients!="(Intercept)" &
P.val <0.05)
vectxsimple_lf
audio_pgls_results
audio_pgls_results$Coefficients
ok[,audio_pgls_results$Coefficients]
ok<-limits%>% mutate_at(audio_pgls_results$Coefficients,log)
okselect<-ok[,audio_pgls_results$Coefficients]
categorylist_aud<-audio_pgls_results$category
vectxsimple_lf
pgls_models_list_bh
modellist_bh
paste0("(",audio_pgls_results$`Audiogram metric`,")~log(",
audio_pgls_results$Coefficients,")")
modellist_sig<-paste0("(",audio_pgls_results$`Audiogram metric`,")~log(",
audio_pgls_results$Coefficients,")")
strsplit(modellist_sig,"~")
modellist_sig
spltmodel<-strsplit(modellist_sig,"~")
spltmodel
modellist_sig
modellist_sig<-paste0(audio_pgls_results$`Audiogram metric`,"~log(",
audio_pgls_results$Coefficients,")")
modellist_sig
spltmodel<-strsplit(modellist_sig,"~")
spltmodel
spltmodel2e][1]
spltmodel[2][1]
spltmodel[[2]][1]
spltmodel[[2]][2]
names(limits)
runplotpgls_aud_bh<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+{
if (pval<0.05)  geom_point(aes_string(shape="aud_rel"), size = 2, col = "black")
else geom_point(aes_string(shape="aud_rel"), size = 2, col = "black", alpha = 0.4)
} + {
if (pval<0.05)  geom_line(aes_string(x = vectx_modellist_lf[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
}+
#geom_text(data = lbl,aes(x = xpos, y = ypos, label = annotateText,
#                         hjust = hjust, vjust = vjust))+
#scale_shape_manual(values=c(17, 16))+
#annotate(geom = 'text', x = -Inf, y = -Inf, label = paste(' ',' R^2 == ',signif(summary(pgls_models_list_bh[[e]])$r.squared,2)), hjust = -0.05, vjust = -0.1, parse = TRUE)+
#annotate(geom = 'text', x = -Inf, y = -Inf, label = paste(' ',' P == ',signif(summary(pgls_models_list_bh[[e]])$coefficients[,4][[2]],2)), hjust = -0.05, vjust = -2.1, parse = TRUE)
#ggtitle(categorylist_aud[e])
p
}
runplotpgls_aud_bh(10)
audio_pgls_results
runplotpgls_aud_bh<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
#geom_line(aes_string(x = vectx_modellist_lf[e],
#                                       y = paste0("slpline_",as.character(e))),
#                            col = "black", size = 2)
p
}
runplotpgls_aud_bh(10)
runplotpgls_aud_bh<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)
#geom_line(aes_string(x = vectx_modellist_lf[e],
#                                       y = paste0("slpline_",as.character(e))),
#                            col = "black", size = 2)
p
}
runplotpgls_aud_bh(10)
modellist_sig
pgls_models_sig<-lapply(modellist_sig,pgls_models)#run pgls
pgls_models_sig
summary(pgls_models_sig)
summary(pgls_models_sig[[1]])
summary(pgls_models_sig[[1]])$'coefficients'
vectxsimple_lf
spltmodel
ok<-limits%>% mutate_at(audio_pgls_results$Coefficients,log)
okselect<-ok[,audio_pgls_results$Coefficients]
audio_pgls_plt$anattraitx
anattraitx<-unlist(lapply(spltmodel, `[[`, 2))
anattraitx
anattrait_simple[i]<-gsub("[\\(\\)]", "", regmatches(anattraitx, gregexpr("\\(.*?\\)", anattraitx))[[i]])
}
anattrait_simple<-numeric()
for(i in seq_along(anattraitx)){
anattrait_simple[i]<-gsub("[\\(\\)]", "", regmatches(anattraitx, gregexpr("\\(.*?\\)", anattraitx))[[i]])
}
anattrait_simple
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),pgls_models_sig[i][[1]]$model$coef[1]+
ok[,spltmodel[[i]][2]*pgls_models_sig[i][[1]]$model$coef[2])
}
pgls_models_sig
anattrait_simple
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),pgls_models_sig[i][[1]]$model$coef[1]+
ok[,anattrait_simple*pgls_models_sig[i][[1]]$model$coef[2])
}
seq_along(anattrait_simple)
pgls_models_sig[i][[1]]$model$coef[1]
ok[,anattrait_simple*pgls_models_sig[i][[1]]$model$coef[2]
modellist_sig
modellist_sig
spltmodel<-strsplit(modellist_sig,"~")
spltmodel
traity<-unlist(lapply(spltmodel, `[[`, 1))
traity
audio_pgls_results$Coefficients
logged<-limits%>% mutate_at(audio_pgls_results$Coefficients,log)
View(logged)
loggedselect<-ok[,audio_pgls_results$Coefficients]
anattrait_simple
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),
pgls_models_sig[i][[1]]$model$coef[1]+
ok[,anattrait_simple*pgls_models_sig[i][[1]]$model$coef[2])
}
anattrait_simple*pgls_models_sig[i][[1]]$model$coef[2]
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),
pgls_models_sig[i][[1]]$model$coef[1]+
logged[,anattrait_simple*pgls_models_sig[i]][[1]]$model$coef[2])
}
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),
pgls_models_sig[i][[1]]$model$coef[1]+
logged[,anattrait_simple*pgls_models_sig[i][[1]]$model$coef[2])
}
for(i in seq_along(anattrait_simple)){
assign(paste0("slpline","_",as.character(i)),
pgls_models_sig[i][[1]]$model$coef[1]+
logged[,anattrait_simple[i]]*pgls_models_sig[i][[1]]$model$coef[2])
}
spltmodel
spltmodel[[e]][1]
spltmodel[[5]][1]
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)
#geom_line(aes_string(x = vectx_modellist_lf[e],
#                                       y = paste0("slpline_",as.character(e))),
#                            col = "black", size = 2)
p
}
runplotpgls_aud_bh(10)
spltmodel[[5]][1]
spltmodel[[5]][2]
anattraitx
vectx_modellist_lf
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplotpgls_aud_bh(10)
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][1], y = spltmodel[[e]][2]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplotpgls_aud_bh(1)
runplotpgls_aud_bh(2)
runplotpgls_aud_bh(3)
runplotpgls_aud_bh(4)
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][2], y = spltmodel[[e]][1]))+
theme_classic()+
theme(legend.position = "none",
axis.text.y = element_blank(),
axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplotpgls_aud_bh(1)
runplot_audio(1)
runplot_audio(1)+
runplot_audio(2)+
runplot_audio(3)+
runplot_audio(4)+
runplot_audio(5)+
runplot_audio(6)+
runplot_audio(7)+
runplot_audio(8)+
runplot_audio(9)+
runplot_audio(10)+
runplot_audio(11)+
runplot_audio(12)+
runplot_audio(13)+plot_annotation(tag_levels = "A")
runplot_audio(1)+
runplot_audio(2)+
runplot_audio(3)+
runplot_audio(4)+
runplot_audio(5)+
runplot_audio(6)+
runplot_audio(7)+
runplot_audio(8)+
runplot_audio(9)+
runplot_audio(10)+
runplot_audio(11)+
runplot_audio(12)+
runplot_audio(13)+
runplot_audio(14)+
runplot_audio(15)+
runplot_audio(16)+
runplot_audio(17)+
runplot_audio(18)+
plot_annotation(tag_levels = "A")
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][2], y = spltmodel[[e]][1]))+
theme_classic()+
#theme(legend.position = "none",
#      axis.text.y = element_blank(),
#      axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplot_audio(1)
runplot_audio(1)+
runplot_audio(2)+
runplot_audio(3)+
runplot_audio(4)+
runplot_audio(5)+
runplot_audio(6)+
runplot_audio(7)+
runplot_audio(8)+
runplot_audio(9)+
runplot_audio(10)+
runplot_audio(11)+
runplot_audio(12)+
runplot_audio(13)+
runplot_audio(14)+
runplot_audio(15)+
runplot_audio(16)+
runplot_audio(17)+
runplot_audio(18)+
plot_annotation(tag_levels = "A")
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][2], y = spltmodel[[e]][1]))+
theme_classic()+
theme(legend.position = "none")
#      axis.text.y = element_blank(),
#      axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplot_audio(1)
#PLOT ALL BEST FREQUENCY
runplot_audio(1)+
runplot_audio(2)+
runplot_audio(3)+
runplot_audio(4)+
runplot_audio(5)+
runplot_audio(6)+
runplot_audio(7)+
runplot_audio(8)+
runplot_audio(9)+
runplot_audio(10)+
runplot_audio(11)+
runplot_audio(12)+
runplot_audio(13)+
runplot_audio(14)+
runplot_audio(15)+
runplot_audio(16)+
runplot_audio(17)+
runplot_audio(18)+
plot_annotation(tag_levels = "A")
runplot_audio<-function(e){
p<-ggplot(limits,
aes_string(x = spltmodel[[e]][2], y = spltmodel[[e]][1]))+
theme_classic()+
theme(legend.position = "none")+
#      axis.text.y = element_blank(),
#      axis.title.y = element_blank())+
geom_point(aes_string(shape="aud_rel"), size = 2)+
geom_line(aes_string(x = anattraitx[e],
y = paste0("slpline_",as.character(e))),
col = "black", size = 2)
p
}
runplot_audio(1)
runplot_audio(1)+
runplot_audio(2)+
runplot_audio(3)+
runplot_audio(4)+
runplot_audio(5)+
runplot_audio(6)+
runplot_audio(7)+
runplot_audio(8)+
runplot_audio(9)+
runplot_audio(10)+
runplot_audio(11)+
runplot_audio(12)+
runplot_audio(13)+
runplot_audio(14)+
runplot_audio(15)+
runplot_audio(16)+
runplot_audio(17)+
runplot_audio(18)+
plot_annotation(tag_levels = "A")
