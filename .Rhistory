limits$TM<-avgdf$TM[match(limits$binomial,avgdf$Binomial)]
limits$RW<-avgdf$RW[match(limits$binomial,avgdf$Binomial)]
limits$FP<-avgdf$FP[match(limits$binomial,avgdf$Binomial)]
limits$Air<-avgdf$Air[match(limits$binomial,avgdf$Binomial)]
limits$TM<-avgdf$TM[match(limits$binomial,avgdf$Binomial)]
limits$HM<-avgdf$HM[match(limits$binomial,avgdf$Binomial)]
limits$BM<-avgdf$BM_lit[match(limits$binomial,avgdf$Binomial)]
limits$ES<-avgdf$ES[match(limits$binomial,avgdf$Binomial)]
limits$TM_FP<-avgdf$TM_FP[match(limits$binomial,avgdf$Binomial)]
limits$TMA<-avgdf$TMA[match(limits$binomial,avgdf$Binomial)]
limits$COffset<-avgdf$COffset[match(limits$binomial,avgdf$Binomial)]
limits$ECD<-avgdf$ECD[match(limits$binomial,avgdf$Binomial)]
limits$CL<-avgdf$CL[match(limits$binomial,avgdf$Binomial)]
limits$CV<-avgdf$CV[match(limits$binomial,avgdf$Binomial)]
limits$UH<-avgdf$UH[match(limits$binomial,avgdf$Binomial)]
limits$spp_aud<-avgdf$aud_spp[match(limits$binomial,avgdf$Binomial)]
limits$aud_rel<-avgdf$aud_rel[match(limits$binomial,avgdf$Binomial)]
#classification for the two species withaverage
limits$aud_rel[limits$binomial=="Corvus_cornix"]<-"Congener"
limits$spp_aud[limits$binomial=="Corvus_cornix"]<-"Corvus_cornix"
limits$aud_rel[limits$binomial=="Phalacrocorax_carbo"]<-"Congener"
limits$spp_aud[limits$binomial=="Phalacrocorax_carbo"]<-"Phalacrocorax_carbo"
limits$aud_rel[limits$binomial=="Corvus_cornix"]<-"Congener"
########The audiogram metrics have now been computed.
########the 'pgls_resid re headmass.R' file can now be used to run the pgls modesl###
########below the models are run without adjusting for head size####
library(RColorBrewer)
library(viridis)
library(patchwork)
library(tidyr)
library(ggrepel)
##plot graph after creating the 'limits' dataframe (see 'Audiograms linked to anatomy' file)
#split into audiograms by species, only including ones with scan data
splt<-fig1 %>% #filter(.,fig1$havescan=="Have scan data for species")%>%
split(.$Species)
df_audiogrm_lst<-list()
for(i in seq_along(splt)){
df_audiogrm_lst[[i]]<-as.data.frame(approx(splt[[i]]$Hz,splt[[i]]$Threshold,n = 5000))
df_audiogrm_lst[[i]]$Species<- rep(splt[[i]]$Species,length.out = 5000)
}
#####SAVE limits 35, modify cutoff to 60 dB, and re-run###
limits60<-limits
limitslong60<-limits60[which(!is.na(limits60$aud_rel)),] %>%#only select the rows for which anatomical data is available for the corresponding audiograms
select(Species,LowHzlimit,HighHzlimit,besthz,reallowdBlimit,realhighdBlimit) %>%
gather(key = "limit", value = "Hz", -c(Species,reallowdBlimit,realhighdBlimit))
#bind audiograms together
bound<-do.call(rbind.data.frame,df_audiogrm_lst)
#we will append data from the 'limits' df using species as a key
bound$LowHzlimit<-NA
bound$HighHzlimit<-NA
bound$besthz<-NA
bound$bestsensitivity<-NA
#add best hz to interpolated datset for sorting
bound$besthz<-limits$besthz[match(bound$Species,limits$Species)]
bound$bestsensitivity<-limits$bestsensitivity[match(bound$Species,limits$Species)]
#bound$HighHzlimit<-limits$HighHzlimit[match(bound$Species,limits$Species)]
#bound$LowHzlimit<-limits$LowHzlimit[match(bound$Species,limits$Species)]
bound$Hz<-bound$x #give appropriate naming for x
#bound2$Hz<-bound2$x #give appropriate naming for x
bound$Species<-as.factor(bound$Species)
bound$`Threshold (dB)`<-bound$y
#bound$Species = with(bound, reorder(Species, besthz, median))
#Add new rows to end of dataframe with audiogram metrics (best Hz, etc.)
bound2<-bound
levels(bound2$Species)<-c(levels(bound2$Species),"High freq. limit","Best freq.","Low freq. limit")
##bound2[95001,"Species"]<-"Low freq. limit"#add 'low hz as species name, placeholder for bethz
# bound2[95002,"Species"]<-"Best freq."
#bound2[95003,"Species"]<-"High freq. limit"
bound$Species<-as.character(bound$Species)
bound$besthz<-as.numeric(bound$besthz)
bound2$Species = with(bound2, reorder(Species, besthz, median))
library(forcats)
range<-ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "grey")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
range
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
range/bestsens+
plot_layout(heights = c(2,1))+
plot_annotation(tag_levels = "A")
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0)+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
ggplot(limits, aes(x = bestsensitivity, y = 0)+
geom_boxplot(width = 0.25)
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))
ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-0.25,1))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-1,1))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
nudge = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
?geom_text_repel
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
min.segment.length = 0)+
#nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
min.segment.length = 0,
arrow = arrow(length = unit(0.015, "npc")))+
#nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
min.segment.length = 0,
segment.size      = 0.2)+
#nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = bestsensitivity, y = 0))+
geom_boxplot(width = 0.25)+
geom_point(aes(y = 0,label = Species))+
geom_text_repel(aes(y = 0,label = Species),
#direction = "x",
size = 3,
min.segment.length = 0,
segment.size      = 1)+
#nudge_y = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
ylim(c(-0.5,0.5))+
xlab("Best sensitivity(dB SPL)")+
ylab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
