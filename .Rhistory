limits$aud_rel[limits$binomial=="Corvus_cornix"]<-"Congener"
########The audiogram metrics have now been computed.
########the 'pgls_resid re headmass.R' file can now be used to run the pgls modesl###
########below the models are run without adjusting for head size####
library(RColorBrewer)
library(viridis)
library(patchwork)
library(tidyr)
library(ggrepel)
##plot graph after creating the 'limits' dataframe (see 'Audiograms linked to anatomy' file)
#split into audiograms by species, only including ones with scan data
splt<-fig1 %>% #filter(.,fig1$havescan=="Have scan data for species")%>%
split(.$Species)
df_audiogrm_lst<-list()
for(i in seq_along(splt)){
df_audiogrm_lst[[i]]<-as.data.frame(approx(splt[[i]]$Hz,splt[[i]]$Threshold,n = 5000))
df_audiogrm_lst[[i]]$Species<- rep(splt[[i]]$Species,length.out = 5000)
}
cutoff
#re-do with limits = 60
limits60<-limits
limitslong60<-limits60[which(!is.na(limits60$aud_rel)),] %>%#only select the rows for which anatomical data is available for the corresponding audiograms
select(Species,LowHzlimit,HighHzlimit,besthz,reallowdBlimit,realhighdBlimit) %>%
gather(key = "limit", value = "Hz", -c(Species,reallowdBlimit,realhighdBlimit))
bound$besthz<-limits$besthz[match(bound$Species,limits$Species)]
bound$bestsensitivity<-limits$bestsensitivity[match(bound$Species,limits$Species)]
#bound$HighHzlimit<-limits$HighHzlimit[match(bound$Species,limits$Species)]
#bound$LowHzlimit<-limits$LowHzlimit[match(bound$Species,limits$Species)]
bound$Hz<-bound$x #give appropriate naming for x
bound<-do.call(rbind.data.frame,df_audiogrm_lst)
#we will append data from the 'limits' df using species as a key
bound$LowHzlimit<-NA
bound$HighHzlimit<-NA
bound$besthz<-NA
bound$bestsensitivity<-NA
#add best hz to interpolated datset for sorting
bound$besthz<-limits$besthz[match(bound$Species,limits$Species)]
bound$bestsensitivity<-limits$bestsensitivity[match(bound$Species,limits$Species)]
#bound$HighHzlimit<-limits$HighHzlimit[match(bound$Species,limits$Species)]
#bound$LowHzlimit<-limits$LowHzlimit[match(bound$Species,limits$Species)]
bound$Hz<-bound$x #give appropriate naming for x
#bound2$Hz<-bound2$x #give appropriate naming for x
bound$Species<-as.factor(bound$Species)
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))
names(bound)
bound$`Threshold (dB)`<-bound2$y
bound$`Threshold (dB)`<-bound$y
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound2,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong, aes(x = Hz, y = Species),col = "black", size = 2)+
scale_color_viridis()
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong, aes(x = Hz, y = Species),col = "black", size = 2)+
scale_color_viridis()
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong60, aes(x = Hz, y = Species),col = "black", size = 2)+
scale_color_viridis()
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong60, aes(x = Hz, y = Species),col = "black", size = 2)+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
ylab("")+
xlab("Frequency(Hz)")+
geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong60, aes(x = Hz, y = Species),col = "black", size = 2)+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
View(limits60)
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limitslong60, aes(x = Hz, y = Species),col = "black", size = 2)+
geom_point(data = limitslong35, aes(x = Hz, y = Species),col = "red", size = 2)+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = limitslong60, aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = limitslong35, aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "grey")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
View(limitslong35)
limitslong60[limit!=="besthz",]
limitslong60[limit!="besthz",]
filter(limitslong60,limit!="besthz")
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "grey")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "orange")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "yellow")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
range<-ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "yellow")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
range
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_label_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
#nudge_x = 1,
box.padding = unit(0.35, "lines"),
point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y = element_blank())
bestsens
range/bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_label_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
#nudge_x = 1,
box.padding = unit(0.35, "lines"),
point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
)#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_label_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
#nudge_x = 1,
box.padding = unit(0.35, "lines"),
point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
range+bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3)+
#nudge_x = 1,
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot()+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
?geom_boxplot
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
#xlim(c(-4,4))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1.5))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
#theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
#      )#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
#axis.line.y = element_blank())
bestsens
range+bestsens
range<-ggplot(bound, aes(x = Hz,
y =  forcats::fct_rev(reorder(
Species,Species))))+
geom_path(data = bound,aes(col = `Threshold (dB)`), size = 2)+
geom_point(data = limits, aes(x = besthz, y = Species), shape = 21, size = 2, colour = "black", fill = "white")+
geom_point(data = filter(limitslong60,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "black")+
geom_point(data = filter(limitslong35,limit!="besthz"), aes(x = Hz, y = Species),shape = 21, size = 2, colour = "black", fill = "grey")+
scale_color_viridis()+
scale_x_log10()+
theme_classic()+
#coord_cartesian(clip = "off", ylim = c(1,22))+
annotation_logticks(sides = "b", outside = TRUE, colour = "black")+
ylab("")+
xlab("Frequency(Hz)")+
#geom_hline(yintercept = 3.5)+
theme(axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_text(angle= 0, vjust = -2.5, hjust=0.5))
range
range+bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_label_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_label_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
range+bestsens+
#plot_layout(heights = c(2,1))+
plot_annotation(tag_levels = "A")
bestsens<-ggplot(limits, aes(x = 0,y = bestsensitivity))+
geom_boxplot(width = 0.25)+
geom_point(aes(x = 0,label = Species))+
geom_text_repel(aes(x = 0,label = Species),
#direction = "x",
size = 3,
nudge_x = 1)+
#box.padding = unit(0.35, "lines"),
#point.padding = unit(1, "lines"))+
#coord_flip()+
#geom_text(aes(x = 0, label = Species))+
theme_classic()+
xlim(c(-0.25,1))+
ylab("Best sensitivity(dB SPL)")+
xlab("")+
theme(#axis.title.y = element_text(angle= 0, vjust = 0.5, hjust=1),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())
bestsens
range+bestsens+
#plot_layout(heights = c(2,1))+
plot_annotation(tag_levels = "A")
range+bestsens+
#plot_layout(heights = c(2,1))+
plot_annotation(tag_levels = "A")
ggsave(file=paste0(choose.dir(),"/supplemental_bar S4 oct 24.svg"), width=10, height=10)
ggsave(file=paste0(choose.dir(),"/supplemental_bar S4 oct 24.svg"))
ggsave(file=paste0(choose.dir(),"/supplemental_bar S4 oct 24.png"))
